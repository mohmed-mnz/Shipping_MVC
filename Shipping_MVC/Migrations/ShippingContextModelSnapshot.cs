// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shipping_MVC.Models;

#nullable disable

namespace Shipping_MVC.Migrations
{
    [DbContext(typeof(ShippingContext))]
    partial class ShippingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Shipping_MVC.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Role_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Role_Id");

                    b.ToTable("admins");
                });

            modelBuilder.Entity("Shipping_MVC.Models.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("branches");
                });

            modelBuilder.Entity("Shipping_MVC.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<double>("Charge_15Days")
                        .HasColumnType("float");

                    b.Property<double>("Charge_24Hour")
                        .HasColumnType("float");

                    b.Property<double>("Charge_89Days")
                        .HasColumnType("float");

                    b.Property<double>("Charge_Regular")
                        .HasColumnType("float");

                    b.Property<int?>("Governorate_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Governorate_Id");

                    b.ToTable("cities");
                });

            modelBuilder.Entity("Shipping_MVC.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<int?>("Branch_Id")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Refused_Order_Perc")
                        .HasColumnType("float");

                    b.Property<int?>("Role_Id")
                        .HasColumnType("int");

                    b.Property<double>("Special_Discount_Perc")
                        .HasColumnType("float");

                    b.Property<string>("Store_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Branch_Id");

                    b.HasIndex("Role_Id");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("Shipping_MVC.Models.Delivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<int?>("Branch_Id")
                        .HasColumnType("int");

                    b.Property<double>("Company_Perc")
                        .HasColumnType("float");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Role_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Branch_Id");

                    b.HasIndex("Role_Id");

                    b.ToTable("deliveries");
                });

            modelBuilder.Entity("Shipping_MVC.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<int?>("Branch_Id")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Role_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Branch_Id");

                    b.HasIndex("Role_Id");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("Shipping_MVC.Models.Governroate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<int?>("Branch_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Branch_Id");

                    b.ToTable("governorates");
                });

            modelBuilder.Entity("Shipping_MVC.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Branch_Id")
                        .HasColumnType("int");

                    b.Property<string>("Charge_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("City_Id")
                        .HasColumnType("int");

                    b.Property<string>("Client_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client_Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client_Village")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Customer_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Delivery_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Governorate_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Order_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Order_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Payment_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Total_Price")
                        .HasColumnType("float");

                    b.Property<double>("Total_Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("Branch_Id");

                    b.HasIndex("City_Id");

                    b.HasIndex("Customer_Id");

                    b.HasIndex("Delivery_Id");

                    b.HasIndex("Governorate_Id");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("Shipping_MVC.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("Shipping_MVC.Models.Weight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Extra_Weight_Price")
                        .HasColumnType("float");

                    b.Property<double>("Standard_Weight")
                        .HasColumnType("float");

                    b.Property<double>("Village_price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("weights");
                });

            modelBuilder.Entity("Shipping_MVC.Models.Admin", b =>
                {
                    b.HasOne("Shipping_MVC.Models.Role", "Role")
                        .WithMany("Admins")
                        .HasForeignKey("Role_Id");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Shipping_MVC.Models.City", b =>
                {
                    b.HasOne("Shipping_MVC.Models.Governroate", "Governorate")
                        .WithMany("Cities")
                        .HasForeignKey("Governorate_Id");

                    b.Navigation("Governorate");
                });

            modelBuilder.Entity("Shipping_MVC.Models.Customer", b =>
                {
                    b.HasOne("Shipping_MVC.Models.Branch", "Branch")
                        .WithMany("Customers")
                        .HasForeignKey("Branch_Id");

                    b.HasOne("Shipping_MVC.Models.Role", "Role")
                        .WithMany("Customers")
                        .HasForeignKey("Role_Id");

                    b.Navigation("Branch");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Shipping_MVC.Models.Delivery", b =>
                {
                    b.HasOne("Shipping_MVC.Models.Branch", "Branch")
                        .WithMany("Deliveries")
                        .HasForeignKey("Branch_Id");

                    b.HasOne("Shipping_MVC.Models.Role", "Role")
                        .WithMany("Deliveries")
                        .HasForeignKey("Role_Id");

                    b.Navigation("Branch");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Shipping_MVC.Models.Employee", b =>
                {
                    b.HasOne("Shipping_MVC.Models.Branch", "Branch")
                        .WithMany("Employees")
                        .HasForeignKey("Branch_Id");

                    b.HasOne("Shipping_MVC.Models.Role", "Role")
                        .WithMany("Employees")
                        .HasForeignKey("Role_Id");

                    b.Navigation("Branch");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Shipping_MVC.Models.Governroate", b =>
                {
                    b.HasOne("Shipping_MVC.Models.Branch", "Branch")
                        .WithMany("Governorates")
                        .HasForeignKey("Branch_Id");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("Shipping_MVC.Models.Order", b =>
                {
                    b.HasOne("Shipping_MVC.Models.Branch", "Branch")
                        .WithMany("Orders")
                        .HasForeignKey("Branch_Id");

                    b.HasOne("Shipping_MVC.Models.City", "City")
                        .WithMany("Orders")
                        .HasForeignKey("City_Id");

                    b.HasOne("Shipping_MVC.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("Customer_Id");

                    b.HasOne("Shipping_MVC.Models.Delivery", "Delivery")
                        .WithMany("Orders")
                        .HasForeignKey("Delivery_Id");

                    b.HasOne("Shipping_MVC.Models.Governroate", "Governorate")
                        .WithMany("Orders")
                        .HasForeignKey("Governorate_Id");

                    b.Navigation("Branch");

                    b.Navigation("City");

                    b.Navigation("Customer");

                    b.Navigation("Delivery");

                    b.Navigation("Governorate");
                });

            modelBuilder.Entity("Shipping_MVC.Models.Branch", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Deliveries");

                    b.Navigation("Employees");

                    b.Navigation("Governorates");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Shipping_MVC.Models.City", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Shipping_MVC.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Shipping_MVC.Models.Delivery", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Shipping_MVC.Models.Governroate", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Shipping_MVC.Models.Role", b =>
                {
                    b.Navigation("Admins");

                    b.Navigation("Customers");

                    b.Navigation("Deliveries");

                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
